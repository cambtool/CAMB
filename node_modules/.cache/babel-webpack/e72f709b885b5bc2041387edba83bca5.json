{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nexport let DataformatingService = /*#__PURE__*/(() => {\n  class DataformatingService {\n    constructor(http, toaster) {\n      this.http = http;\n      this.toaster = toaster;\n    }\n\n    getformat(format) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/' + format;\n      const headers = {\n        'content-type': 'application/json'\n      };\n      const body = JSON.stringify(format); // console.log(body)\n\n      let option = {\n        body: format,\n        oberve: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/xml\"\n        })\n      };\n      return this.http.get(url);\n    }\n\n    handleError(error) {\n      if (error.status === 0) {\n        console.error('An error occurred:', error.error);\n      } else {\n        console.log(`Backend returned code ${error.status}, body was: `, error.error);\n      }\n\n      return throwError(error.error);\n    }\n\n    emboss_sixpack_Run(obj) {\n      let url = \"https://www.ebi.ac.uk/Tools/services/rest/emboss_sixpack/run\";\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"multipart/form-data\"\n      });\n      let options = {\n        headers: headers\n      };\n      return this.http.post(url, obj, options);\n    }\n\n    getEmboss_SixpackStatus(jobId) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_sixpack/status/' + jobId;\n      return this.http.get(url);\n    }\n\n    getEmboss_sixpackResult(jobId, statusType) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_sixpack/result/' + jobId + '/' + statusType;\n      return this.http.get(url);\n    }\n\n    phylogency_Run(obj) {\n      let url = \"https://www.ebi.ac.uk/Tools/services/rest/simple_phylogeny/run\";\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"multipart/form-data\"\n      });\n      let options = {\n        headers: headers\n      };\n      return this.http.post(url, obj, options);\n    }\n\n    getPhylogencyStatus(jobId) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/simple_phylogeny/status/' + jobId;\n      return this.http.get(url);\n    }\n\n    getPhylogencyResult(jobId, statusType) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_sixpack/result/' + jobId + '/' + statusType;\n      return this.http.get(url);\n    }\n\n    ncbiblast_Run(obj) {\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"multipart/form-data\"\n      });\n      let options = {\n        headers: headers\n      };\n      let url = \"https://www.ebi.ac.uk/Tools/services/rest/ncbiblast/run\";\n      return this.http.post(url, obj, options);\n    }\n\n    getncbiblastStatus(jobId) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/ncbiblast/status/' + jobId;\n      return this.http.get(url);\n    }\n\n    getncbiblastResult(jobId, statusType) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/ncbiblast/result/' + jobId + '/' + statusType;\n      return this.http.get(url);\n    }\n\n    FASTM_Run(obj) {\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"multipart/form-data\"\n      });\n      let options = {\n        headers: headers\n      };\n      let url = \"https://www.ebi.ac.uk/Tools/services/rest/fastm/run\";\n      return this.http.post(url, obj, options);\n    }\n\n    FASTMStatus(jobId) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/fastm/status/' + jobId;\n      return this.http.get(url);\n    }\n\n    FASTMResult(jobId, statusType) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/fastm/result/' + jobId + '/' + statusType;\n      return this.http.get(url);\n    }\n\n    FASTA_Run(obj) {\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"multipart/form-data\"\n      });\n      let options = {\n        headers: headers\n      };\n      let url = \"https://www.ebi.ac.uk/Tools/services/rest/fasta/run\";\n      return this.http.post(url, obj, options);\n    }\n\n    FASTAStatus(jobId) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/fasta/status/' + jobId;\n      return this.http.get(url);\n    }\n\n    FASTAResult(jobId, statusType) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/fasta/result/' + jobId + '/' + statusType;\n      return this.http.get(url);\n    }\n\n    NewCPG_Run(obj) {\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"multipart/form-data\"\n      });\n      let options = {\n        headers: headers\n      };\n      let url = \"https://www.ebi.ac.uk/Tools/services/rest/emboss_newcpgreport/run\";\n      return this.http.post(url, obj, options);\n    }\n\n    NewCPGStatus(jobId) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_newcpgreport/status/' + jobId;\n      return this.http.get(url);\n    }\n\n    NewCPGResult(jobId, statusType) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_newcpgreport/result/' + jobId + '/' + statusType;\n      return this.http.get(url);\n    }\n\n    TRANSEQ_Run(obj) {\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"multipart/form-data\"\n      });\n      let options = {\n        headers: headers\n      };\n      let url = \"https://www.ebi.ac.uk/Tools/services/rest/emboss_backtranseq/run\";\n      return this.http.post(url, obj, options);\n    }\n\n    TRANSEQStatus(jobId) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_backtranseq/status/' + jobId;\n      return this.http.get(url);\n    }\n\n    TRANSEQResult(jobId, statusType) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_backtranseq/result/' + jobId + '/' + statusType;\n      return this.http.get(url);\n    }\n\n    ETRANSEQ_Run(obj) {\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"multipart/form-data\"\n      });\n      let options = {\n        headers: headers\n      };\n      let url = \"https://www.ebi.ac.uk/Tools/services/rest/emboss_transeq/run\";\n      return this.http.post(url, obj, options);\n    }\n\n    ETRANSEQStatus(jobId) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_transeq/status/' + jobId;\n      return this.http.get(url);\n    }\n\n    ETRANSEQResult(jobId, statusType) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_transeq/result/' + jobId + '/' + statusType;\n      return this.http.get(url);\n    }\n\n    SEQ_Run(obj) {\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"multipart/form-data\"\n      });\n      let options = {\n        headers: headers\n      };\n      let url = \"https://www.ebi.ac.uk/Tools/services/rest/seqcksum/run\";\n      return this.http.post(url, obj, options);\n    }\n\n    SEQStatus(jobId) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/seqcksum/status/' + jobId;\n      return this.http.get(url);\n    }\n\n    SEQResult(jobId, statusType) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/seqcksum/result/' + jobId + '/' + statusType;\n      return this.http.get(url);\n    }\n\n    ISOCHORE_Run(obj) {\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"multipart/form-data\"\n      });\n      let options = {\n        headers: headers\n      };\n      let url = \"https://www.ebi.ac.uk/Tools/services/rest/emboss_isochore/run\";\n      return this.http.post(url, obj, options);\n    }\n\n    ISOCHOREStatus(jobId) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_isochore/status/' + jobId;\n      return this.http.get(url);\n    }\n\n    ISOCHOREResult(jobId, statusType) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_isochore/result/' + jobId + '/' + statusType;\n      return this.http.get(url);\n    }\n\n    CPGPLOt_Run(obj) {\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"multipart/form-data\"\n      });\n      let options = {\n        headers: headers\n      };\n      let url = \"https://www.ebi.ac.uk/Tools/services/rest/emboss_cpgplot/run\";\n      return this.http.post(url, obj, options);\n    }\n\n    CPGPLOtStatus(jobId) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_cpgplot/status/' + jobId;\n      return this.http.get(url);\n    }\n\n    CPGPLOtResult(jobId, statusType) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_cpgplot/result/' + jobId + '/' + statusType;\n      return this.http.get(url);\n    }\n\n    genewise_Run(obj) {\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"multipart/form-data\"\n      });\n      let options = {\n        headers: headers\n      };\n      let url = \"https://www.ebi.ac.uk/Tools/services/rest/genewise/run\";\n      return this.http.post(url, obj, options);\n    }\n\n    genewiseStatus(jobId) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/genewise/status/' + jobId;\n      return this.http.get(url);\n    }\n\n    genewiseResult(jobId, statusType) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/genewise/result/' + jobId + '/' + statusType;\n      return this.http.get(url);\n    }\n\n    EMB_Run(obj) {\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"multipart/form-data\"\n      });\n      let options = {\n        headers: headers\n      };\n      let url = \"https://www.ebi.ac.uk/Tools/services/rest/emboss_seqret/run\";\n      return this.http.post(url, obj, options);\n    }\n\n    EMBStatus(jobId) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_seqret/status/' + jobId;\n      return this.http.get(url);\n    }\n\n    EMBResult(jobId, statusType) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_seqret/result/' + jobId + '/' + statusType;\n      return this.http.get(url);\n    }\n\n    PSI_Run(obj) {\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"multipart/form-data\"\n      });\n      let options = {\n        headers: headers\n      };\n      let url = \"https://www.ebi.ac.uk/Tools/services/rest/psiblast/run\";\n      return this.http.post(url, obj, options);\n    }\n\n    PSIStatus(jobId) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/psiblast/status/' + jobId;\n      return this.http.get(url);\n    }\n\n    PSIResult(jobId, statusType) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/psiblast/result/' + jobId + '/' + statusType;\n      return this.http.get(url);\n    }\n\n    emboss_pepinfo_Run(obj) {\n      let url = \"https://www.ebi.ac.uk/Tools/services/rest/emboss_pepinfo/run\";\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"multipart/form-data\"\n      });\n      let options = {\n        headers: headers\n      };\n      return this.http.post(url, obj, options);\n    }\n\n    getEmboss_pepinfoStatus(jobId) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_pepinfo/status/' + jobId;\n      return this.http.get(url);\n    }\n\n    getEmboss_pepinfoResult(jobId, statusType) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_pepinfo/result/' + jobId + '/' + statusType;\n      return this.http.get(url);\n    }\n\n    emboss_pepstats_Run(obj) {\n      let url = \"https://www.ebi.ac.uk/Tools/services/rest/emboss_pepstats/run\";\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"multipart/form-data\"\n      });\n      let options = {\n        headers: headers\n      };\n      return this.http.post(url, obj, options);\n    }\n\n    getEmboss_pepstatsStatus(jobId) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_pepstats/status/' + jobId;\n      return this.http.get(url);\n    }\n\n    getEmboss_pepstatsResult(jobId, statusType) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_pepstats/result/' + jobId + '/' + statusType;\n      return this.http.get(url);\n    }\n\n    emboss_pepwindow_Run(obj) {\n      let url = \"https://www.ebi.ac.uk/Tools/services/rest/emboss_pepwindow/run\";\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"multipart/form-data\"\n      });\n      let options = {\n        headers: headers\n      };\n      return this.http.post(url, obj, options);\n    }\n\n    getEmboss_pepwindowStatus(jobId) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_pepwindow/status/' + jobId;\n      return this.http.get(url);\n    }\n\n    getEmboss_pepwindowResult(jobId, statusType) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_pepwindow/result/' + jobId + '/' + statusType;\n      return this.http.get(url);\n    }\n\n    emboss_statists_Run(obj) {\n      let url = \"https://www.ebi.ac.uk/Tools/services/rest/saps/run\";\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"multipart/form-data\"\n      });\n      let options = {\n        headers: headers\n      };\n      return this.http.post(url, obj, options);\n    }\n\n    getEmboss_statistsStatus(jobId) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/saps/status/' + jobId;\n      return this.http.get(url);\n    }\n\n    getEmboss_statistsResult(jobId, statusType) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/saps/result/' + jobId + '/' + statusType;\n      return this.http.get(url);\n    }\n\n    emboss_water_Run(obj) {\n      let url = \"https://www.ebi.ac.uk/Tools/services/rest/emboss_water/run\";\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"multipart/form-data\"\n      });\n      let options = {\n        headers: headers\n      };\n      return this.http.post(url, obj, options);\n    }\n\n    getEmboss_waterStatus(jobId) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_water/status/' + jobId;\n      return this.http.get(url);\n    }\n\n    getEmboss_waterResult(jobId, statusType) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/emboss_water/result/' + jobId + '/' + statusType;\n      return this.http.get(url);\n    }\n\n    emboss_pratt_Run(obj) {\n      let url = \"https://www.ebi.ac.uk/Tools/services/rest/phobius/run\";\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"multipart/form-data\"\n      });\n      let options = {\n        headers: headers\n      };\n      return this.http.post(url, obj, options);\n    }\n\n    getEmboss_prattStatus(jobId) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/phobius/status/' + jobId;\n      return this.http.get(url);\n    }\n\n    getEmboss_prattResult(jobId, statusType) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/phobius/result/' + jobId + '/' + statusType;\n      return this.http.get(url);\n    }\n\n    emboss_ebi_Run(obj) {\n      let url = \"https://www.ebi.ac.uk/Tools/services/rest/phobius/run\";\n      let headers = new HttpHeaders({\n        \"Content-Type\": \"multipart/form-data\"\n      });\n      let options = {\n        headers: headers\n      };\n      return this.http.post(url, obj, options);\n    }\n\n    getEmboss_ebitStatus(jobId) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/phobius/status/' + jobId;\n      return this.http.get(url);\n    }\n\n    getEmboss_ebitResult(jobId, statusType) {\n      const url = 'https://www.ebi.ac.uk/Tools/services/rest/phobius/result/' + jobId + '/' + statusType;\n      return this.http.get(url);\n    }\n\n  }\n\n  DataformatingService.ɵfac = function DataformatingService_Factory(t) {\n    return new (t || DataformatingService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService));\n  };\n\n  DataformatingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataformatingService,\n    factory: DataformatingService.ɵfac,\n    providedIn: 'root'\n  });\n  return DataformatingService;\n})();","map":null,"metadata":{},"sourceType":"module"}