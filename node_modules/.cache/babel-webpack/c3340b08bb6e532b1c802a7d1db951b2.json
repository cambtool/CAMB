{"ast":null,"code":"import _asyncToGenerator from \"D:/dev/camb/camb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { FormControl } from '@angular/forms';\nimport { timer } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { ResultComponent } from 'src/app/data-formatting/result/result.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/data-formatting/dataformating.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/progress-spinner\";\n\nfunction SequenceStatistsComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"div\", 20);\n    i0.ɵɵelementStart(2, \"div\", 21);\n    i0.ɵɵelement(3, \"mat-progress-spinner\", 22);\n    i0.ɵɵelementStart(4, \"h2\");\n    i0.ɵɵtext(5, \"Your Job Is Still Processing\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"mode\", \"indeterminate\")(\"value\", \"Your Job Is Still Processing\");\n  }\n}\n\nfunction SequenceStatistsComponent_option_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", item_r5.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r5.label, \" \");\n  }\n}\n\nfunction SequenceStatistsComponent_option_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", item_r6.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r6.label, \" \");\n  }\n}\n\nfunction SequenceStatistsComponent_option_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 23);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", item_r7.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r7.label, \" \");\n  }\n}\n\nfunction SequenceStatistsComponent_div_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 24);\n    i0.ɵɵelement(2, \"input\", 25);\n    i0.ɵɵelement(3, \"input\", 26);\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5, \" If available, the title will be included in the subject of the notification email and can be used as a way to identify your analysis\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let SequenceStatistsComponent = /*#__PURE__*/(() => {\n  class SequenceStatistsComponent {\n    constructor(fb, service, http, toaster, dialog) {\n      this.fb = fb;\n      this.service = service;\n      this.http = http;\n      this.toaster = toaster;\n      this.dialog = dialog;\n      this.sequence = [];\n      this.showLoader = false;\n      this.name = '';\n      this.show = false;\n      this.show2 = false;\n      this.show3 = false;\n      this.isSubmitted = false;\n      this.outputtype = [];\n      this.species = [];\n      this.positiveresidues = [];\n      this.data = [];\n      this.buttonName = 'More option...';\n      this.registrationForm = this.fb.group({\n        sequence: new FormControl(''),\n        outputtype: new FormControl(''),\n        species: new FormControl(''),\n        positiveresidues: new FormControl(''),\n        email: new FormControl(''),\n        title: new FormControl('')\n      });\n    }\n\n    ngOnInit() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        _this.outputtype = yield _this.service.getformat('/saps/parameterdetails/outputtype').toPromise();\n        _this.species = yield _this.service.getformat('/saps/parameterdetails/species').toPromise();\n        _this.positiveresidues = yield _this.service.getformat('/saps/parameterdetails/positiveresidues').toPromise();\n      })();\n    }\n\n    toggle() {\n      // this.show = !this.show;\n      this.registrationForm.controls.sequence.setValue(`>sp|P35858|ALS_HUMAN Insulin-like growth factor-binding protein complex acid labile subunit OS=Homo sapiens GN=IGFALS PE=1 SV=1\n    MALRKGGLALALLLLSWVALGPRSLEGADPGTPGEAEGPACPAACVCSYDDDADELSVFCSSRNLTRLPDGVPGGTQALWLDGNNLSSVPPAAFQNLSSLGFLNLQGGQLGSLEPQALLGLENLCHLHLERNQLRSLALGTFAHTPALASLGLSNNRLSRLEDGLFEGLGSLWDLNLGWNSLAVLPDAAFRGLGSLRELVLAGNRLAYLQPALFSGLAELRELDLSRNALRAIKANVFVQLPRLQKLYLDRNLIAAVAPGAFLGLKALRWLDLSHNRVAGLLEDTFPGLLGLRVLRLSHNAIASLRPRTFKDLHFLEELQLGHNRIRQLAERSFEGLGQLEVLTLDHNQLQEVKAGAFLGLTNVAVMNLSGNCLRNLPEQVFRGLGKLHSLHLEGSCLGRIRPHTFTGLSGLRRLFLKDNGLVGIEEQSLWGLAELLELDLTSNQLTHLPHRLFQGLGKLEYLLLSRNRLAELPADALGPLQRAFWLDVSHNRLEALPNSLLAPLGRLRYLSLRNNSLRTFTPQPPGLERLWLEGNPWDCGCPLKALRDFALQNPSAVPRFVQAICEGDDCQPPAYTYNNITCASPPEVVGLDLRDLSEAHFAPC `);\n    }\n\n    toggleinput() {\n      this.show2 = !this.show2;\n      if (this.show2) this.buttonName = \"See Less\";else this.buttonName = \"More option\";\n    }\n\n    checkbox() {\n      this.show3 = !this.show3;\n    }\n\n    handleClear() {\n      this.registrationForm.controls.sequence.setValue('');\n    }\n\n    get cityName() {\n      return this.registrationForm.get('cityName');\n    }\n\n    onSubmit(xml) {\n      var _a, _b, _c, _d, _e, _f;\n\n      let formdata = new FormData();\n      formdata.append(\"email\", (_a = this.registrationForm.get('email')) === null || _a === void 0 ? void 0 : _a.value);\n      formdata.append(\"positiveresidues\", (_b = this.registrationForm.get('positiveresidues')) === null || _b === void 0 ? void 0 : _b.value);\n      formdata.append(\"species\", (_c = this.registrationForm.get('species')) === null || _c === void 0 ? void 0 : _c.value);\n      formdata.append(\"outputtype\", (_d = this.registrationForm.get('outputtype')) === null || _d === void 0 ? void 0 : _d.value);\n      formdata.append(\"sequence\", (_e = this.registrationForm.get('sequence')) === null || _e === void 0 ? void 0 : _e.value);\n      formdata.append(\"title\", (_f = this.registrationForm.get('title')) === null || _f === void 0 ? void 0 : _f.value);\n      this.isSubmitted = true;\n\n      if (!this.registrationForm.valid) {\n        false;\n      }\n\n      this.service.emboss_statists_Run(formdata).subscribe(success => {\n        console.log(success);\n      }, error => {\n        console.log(error);\n\n        if (error.status == 200) {\n          this.jobId = error.error.text;\n\n          if (this.jobId != null) {\n            this.getResult(); // this.service.getEmboss_statistsStatus(this.jobId).subscribe(\n            //   data => {\n            //     this.toaster.success(data.toString())\n            //   }, (error) => {\n            //     if (error.status == 200) {\n            //       this.jobStatus = error.error.text\n            //       this.toaster.info(this.jobStatus)\n            //       setTimeout(() => {\n            //         // if (this.jobStatus != \"FAILURE\") {\n            //         this.service.getEmboss_statistsResult(this.jobId, 'out').subscribe(\n            //           success => {\n            //             console.log(success);\n            //           },\n            //           error => {\n            //             console.log(error);\n            //             if (error.status == 200) {\n            //               let result = error.error.text;\n            //               const dialogRef = this.dialog.open(ResultComponent, {\n            //                 data: {\n            //                   text: result\n            //                 }\n            //               });\n            //             }else {\n            //               this.toaster.error(error.error)\n            //             }\n            //           }\n            //         )\n            //         // }\n            //       }, 20000);\n            //     }\n            //     else {\n            //       this.toaster.error(error.error)\n            //     }\n            //   }\n            // )\n          }\n        } else {\n          this.toaster.error(error.error);\n        }\n      });\n    }\n\n    getResult() {\n      this.showLoader = true;\n      this.currentSub = timer(10000).pipe(mergeMap(() => this.service.getEmboss_statistsStatus(this.jobId))).subscribe(response => {\n        console.log(response); // this.message_arr = response.resp;\n      }, error => {\n        var _a;\n\n        console.log(error);\n\n        if (error.status == 200) {\n          this.jobStatus = error.error.text;\n          this.toaster.info(this.jobStatus);\n\n          if (this.jobStatus != \"RUNNING\") {\n            this.service.getEmboss_statistsResult(this.jobId, 'out').subscribe(response => {\n              console.log(response); // this.message_arr = response.resp;\n            }, error => {\n              console.log(error);\n\n              if (error.status == 200) {\n                this.showLoader = false;\n                let result = error.error.text;\n                const dialogRef = this.dialog.open(ResultComponent, {\n                  data: {\n                    text: result\n                  }\n                });\n              } else {\n                this.toaster.error(error.error);\n                this.getResult();\n              }\n            });\n          } else {\n            if (this.jobStatus == \"RUNNING\") {\n              this.getResult();\n            } else {\n              this.showLoader = false;\n              (_a = this.currentSub) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n            }\n          }\n        } else {\n          this.toaster.error(error.error);\n          this.getResult();\n        }\n      });\n    }\n\n    ngOnDestroy() {\n      var _a;\n\n      (_a = this.currentSub) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    }\n\n  }\n\n  SequenceStatistsComponent.ɵfac = function SequenceStatistsComponent_Factory(t) {\n    return new (t || SequenceStatistsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DataformatingService), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.ToastrService), i0.ɵɵdirectiveInject(i5.MatDialog));\n  };\n\n  SequenceStatistsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SequenceStatistsComponent,\n    selectors: [[\"app-sequenceStatists\"]],\n    decls: 54,\n    vars: 6,\n    consts: [[1, \"positionRelative\"], [4, \"ngIf\"], [1, \"pack-head\"], [1, \"page-size\"], [1, \"form\"], [3, \"formGroup\"], [1, \"step-one-form\"], [\"matInput\", \"\", \"placeholder\", \"Your Message\", \"cdkTextareaAutosize\", \"\", \"cdkAutosizeMinRows\", \"6\", \"formControlName\", \"sequence\", 2, \"width\", \"99%\", \"resize\", \"vertical\", \"height\", \"200px\", \"outline-color\", \"#014371\"], [1, \"btn\"], [\"id\", \"equence-btn\", 3, \"click\"], [3, \"click\"], [1, \"step-two-form\"], [1, \"more-option\"], [\"formControlName\", \"outputtype\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"species\"], [\"formControlName\", \"positiveresidues\"], [1, \"step-three-form\"], [\"type\", \"checkbox\", \"id\", \"vehicle1\", \"name\", \"vehicle1\", \"value\", \"Bike\", 3, \"click\"], [\"id\", \"btnn\", \"type\", \"submit\", 3, \"click\"], [1, \"overlay\"], [1, \"progressBar\"], [1, \"custom-spinner\", 3, \"mode\", \"value\"], [3, \"ngValue\"], [1, \"job-frm\"], [\"id\", \"textbox\", \"type\", \"text\", \"placeholder\", \"EMAil\", \"formControlName\", \"email\"], [\"id\", \"textbox\", \"type\", \"text\", \"placeholder\", \"TITLE\", \"formControlName\", \"title\"]],\n    template: function SequenceStatistsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, SequenceStatistsComponent_ng_container_1_Template, 6, 2, \"ng-container\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"h1\");\n        i0.ɵɵtext(5, \"SAPS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵelementStart(8, \"form\", 5);\n        i0.ɵɵelementStart(9, \"h2\");\n        i0.ɵɵtext(10, \"Statistical Analysis of Protein Sequences\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"p\");\n        i0.ɵɵtext(12, \"SAPS evaluates a wide variety of protein sequence properties using statistics. Properties considered include compositional biases, clusters and runs of charge and other amino acid types, different kinds and extents of repetitive structures, locally periodic motifs, and anomalous spacings between identical residue types.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 6);\n        i0.ɵɵelementStart(14, \"label\");\n        i0.ɵɵtext(15, \"Step:1 - Enter your input sequence \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"p\");\n        i0.ɵɵtext(17, \"Enter or paste a PROTEIN sequence in any supported format:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"textarea\", 7);\n        i0.ɵɵtext(19, \"\\n      \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 8);\n        i0.ɵɵelementStart(21, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function SequenceStatistsComponent_Template_button_click_21_listener() {\n          return ctx.toggle();\n        });\n        i0.ɵɵtext(22, \" Use a examples equence \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function SequenceStatistsComponent_Template_button_click_23_listener() {\n          return ctx.handleClear();\n        });\n        i0.ɵɵtext(24, \"Clear\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 11);\n        i0.ɵɵelementStart(26, \"p\");\n        i0.ɵɵelementStart(27, \"label\");\n        i0.ɵɵtext(28, \"STEP 2 - Select Parameters\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\");\n        i0.ɵɵelementStart(30, \"div\", 12);\n        i0.ɵɵelementStart(31, \"p\");\n        i0.ɵɵtext(32, \"OUTPUT TYPE\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"select\", 13);\n        i0.ɵɵtemplate(34, SequenceStatistsComponent_option_34_Template, 2, 2, \"option\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 12);\n        i0.ɵɵelementStart(36, \"p\");\n        i0.ɵɵtext(37, \"SPECIES\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"select\", 15);\n        i0.ɵɵtemplate(39, SequenceStatistsComponent_option_39_Template, 2, 2, \"option\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\", 12);\n        i0.ɵɵelementStart(41, \"p\");\n        i0.ɵɵtext(42, \"POSITIVE RESIDUES\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"select\", 16);\n        i0.ɵɵtemplate(44, SequenceStatistsComponent_option_44_Template, 2, 2, \"option\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"div\", 17);\n        i0.ɵɵelementStart(46, \"label\");\n        i0.ɵɵtext(47, \"STEP 3 - Submit your job\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"p\");\n        i0.ɵɵelementStart(49, \"input\", 18);\n        i0.ɵɵlistener(\"click\", function SequenceStatistsComponent_Template_input_click_49_listener() {\n          return ctx.checkbox();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(50, \" Be notified by email (Tick this box if you want to be notified by email when the results are available) \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(51, SequenceStatistsComponent_div_51_Template, 6, 0, \"div\", 1);\n        i0.ɵɵelementStart(52, \"button\", 19);\n        i0.ɵɵlistener(\"click\", function SequenceStatistsComponent_Template_button_click_52_listener() {\n          return ctx.onSubmit(ctx.registrationForm.value);\n        });\n        i0.ɵɵtext(53, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showLoader);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.registrationForm);\n        i0.ɵɵadvance(26);\n        i0.ɵɵproperty(\"ngForOf\", ctx.outputtype.values.values);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.species.values.values);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.positiveresidues.values.values);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.show3);\n      }\n    },\n    directives: [i6.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.SelectControlValueAccessor, i6.NgForOf, i7.MatProgressSpinner, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n    styles: [\".positionRelative[_ngcontent-%COMP%]{position:relative!important}.overlay[_ngcontent-%COMP%]{background-color:#0006;width:100%;height:100%;position:absolute;top:0;left:0}.progressBar[_ngcontent-%COMP%]{width:50%;margin:0 auto;position:absolute;top:10%;left:0;right:0;padding:20px;z-index:2}.progressBar[_ngcontent-%COMP%]   .custom-spinner[_ngcontent-%COMP%]{margin:0 auto}.progressBar[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{text-align:center;margin:0;font-size:25px;padding-top:20px;color:#fff}.custom-spinner[_ngcontent-%COMP%]   .mat-progress-spinner-circle[_ngcontent-%COMP%]{stroke:red}.custom-spinner[_ngcontent-%COMP%]   .mat-progress-spinner-circle[_ngcontent-%COMP%], .custom-spinner[_ngcontent-%COMP%]   .mat-progress-spinner-circle.mat-progress-spinner-primary[_ngcontent-%COMP%]{stroke:#00f}.custom-spinner[_ngcontent-%COMP%]   .mat-progress-spinner-circle.mat-progress-spinner-primary[_ngcontent-%COMP%]   .mat-progress-spinner-path[_ngcontent-%COMP%]{stroke:green}  .mat-progress-spinner circle{stroke:#fff!important}\"]\n  });\n  return SequenceStatistsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}