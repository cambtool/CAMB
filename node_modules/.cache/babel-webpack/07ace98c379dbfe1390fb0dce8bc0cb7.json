{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/tabs\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./dna-other-tools/dna-other-tools.component\";\n\nconst _c0 = function () {\n  return [\"/dataAnalysis/Newcpgreport\"];\n};\n\nconst _c1 = function () {\n  return [\"/dataAnalysis/GeneWise\"];\n};\n\nconst _c2 = function () {\n  return [\"/dataAnalysis/seqcksum\"];\n};\n\nconst _c3 = function () {\n  return [\"/dataAnalysis/Isochore\"];\n};\n\nconst _c4 = function () {\n  return [\"/dataAnalysis/CPGPLOT\"];\n};\n\nconst _c5 = function () {\n  return [\"/dataAnalysis/Transeq\"];\n};\n\nconst _c6 = function () {\n  return [\"/dataAnalysis/BackTranSeq\"];\n};\n\nexport let DataAnalysisComponent = /*#__PURE__*/(() => {\n  class DataAnalysisComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n  }\n\n  DataAnalysisComponent.ɵfac = function DataAnalysisComponent_Factory(t) {\n    return new (t || DataAnalysisComponent)();\n  };\n\n  DataAnalysisComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DataAnalysisComponent,\n    selectors: [[\"app-data-analysis\"]],\n    decls: 67,\n    vars: 14,\n    consts: [[1, \"container\"], [1, \"row\", \"mainPadding\"], [1, \"col-md-12\", \"col-sm-12\", \"col-xs-12\"], [\"animationDuration\", \"0ms\"], [\"label\", \"DataAnalysis\"], [1, \"row\", \"paddingTop\"], [1, \"col-md-6\", \"col-sm-6\", \"col-xs-6\"], [\"src\", \"assets/images/dna-1-inner.PNG\", \"alt\", \"\", 2, \"width\", \"100%\"], [\"src\", \"assets/images/dna-2-inner.PNG\", \"alt\", \"\", 2, \"width\", \"100%\"], [\"label\", \"Newcpgreport\"], [\"routerLinkActive\", \"router-link-active\", 1, \"btnFormating\", 3, \"routerLink\"], [\"label\", \"GENE WISE\"], [\"label\", \"SEQCK SUM\"], [\"label\", \"ISOCHORE\"], [\"label\", \"CPGPLOT\"], [\"label\", \"TRANSEQ\"], [\"label\", \"BACKTRANSEQ\"], [\"label\", \"Other tools\"]],\n    template: function DataAnalysisComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"mat-tab-group\", 3);\n        i0.ɵɵelementStart(4, \"mat-tab\", 4);\n        i0.ɵɵelementStart(5, \"h2\");\n        i0.ɵɵtext(6, \"DNA Analysis\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"p\");\n        i0.ɵɵtext(8, \" DNA analysis plays a critical role in bioinformatics, which is the application of computer science and information technology to the field of biology. Bioinformatics is a rapidly growing field that has revolutionized many areas of biological research, including genomics, proteomics, and evolutionary biology. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 5);\n        i0.ɵɵelementStart(10, \"div\", 6);\n        i0.ɵɵelement(11, \"img\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 6);\n        i0.ɵɵelement(13, \"img\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"p\");\n        i0.ɵɵtext(15, \" In the field of bioinformatics, DNA analysis tools are essential for studying the genetic information stored within DNA. These tools are computer programs or software that allow researchers to analyze, interpret and visualize DNA data, such as DNA sequences and genetic variations.Some commonly used DNA analysis tools in bioinformatics include: Sequence alignment tools, Genome annotation software, Phylogenetic analysis tools and Structural analysis tools. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-tab\", 9);\n        i0.ɵɵelementStart(17, \"h2\");\n        i0.ɵɵtext(18, \"Newcpgreport\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"p\");\n        i0.ɵɵtext(20, \" The Newcpgreport tool in EMBOSS uses a statistical method to predict CpG islands based on the frequency of CpG dinucleotides in a DNA sequence. It identifies CpG islands based on three criteria: GC content, observed-to-expected CpG ratio, and length of the CpG island. The output of Newcpgreport includes a graphical representation of the predicted CpG islands, as well as a tabulated summary of their properties. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"button\", 10);\n        i0.ɵɵtext(22, \" Button \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"mat-tab\", 11);\n        i0.ɵɵelementStart(24, \"h2\");\n        i0.ɵɵtext(25, \"GENE WISE\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"p\");\n        i0.ɵɵtext(27, \" GENE WISE is a computer program that is used to analyze DNA sequences and identify genes. It works by comparing the DNA sequence to a database of known protein sequences, and uses this comparison to predict where the genes are located, how they are structured, and how they are regulated. This tool is widely used in genomics research for gene annotation and identification. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"button\", 10);\n        i0.ɵɵtext(29, \" Button \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"mat-tab\", 12);\n        i0.ɵɵelementStart(31, \"h2\");\n        i0.ɵɵtext(32, \"SEQCK SUM\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"p\");\n        i0.ɵɵtext(34, \" CheckSum Tool is a bioinformatics tool that is used to calculate and validate checksums for nucleotide and protein sequence data. Checksums are unique digital fingerprints that are generated using a mathematical algorithm to represent a large amount of data in a compact and unique way.The tool then calculates the checksum values using the selected algorithm(s) and returns the result to the user. The user can then compare the calculated checksums to the original sequence data to verify that the data has not been altered or corrupted during transmission or storage. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"button\", 10);\n        i0.ɵɵtext(36, \" Button \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"mat-tab\", 13);\n        i0.ɵɵelementStart(38, \"h2\");\n        i0.ɵɵtext(39, \"ISOCHORE\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"p\");\n        i0.ɵɵtext(41, \" The ISOCHORE tool uses a statistical approach to identify isochores in genomic sequences. It calculates the GC content of a sliding window along the genome and identifies regions with a significantly different GC content compared to the background GC content. The output of the ISOCHORE tool includes a graphical representation of the identified isochores, as well as a tabulated summary of their properties, such as length, GC content, and statistical significance. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"button\", 10);\n        i0.ɵɵtext(43, \" Button \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"mat-tab\", 14);\n        i0.ɵɵelementStart(45, \"h2\");\n        i0.ɵɵtext(46, \"CPGPLOT\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"p\");\n        i0.ɵɵtext(48, \" The CPGPLOT tool can generate several types of plots, including GC skew plots, dinucleotide frequency plots, codon usage plots, and amino acid composition plots. These plots are useful for identifying sequence features, such as gene boundaries, replication origins, and coding regions. They can also reveal patterns of genome evolution and adaptation, such as biased codon usage and nucleotide composition variation. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"button\", 10);\n        i0.ɵɵtext(50, \" Button \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"mat-tab\", 15);\n        i0.ɵɵelementStart(52, \"h2\");\n        i0.ɵɵtext(53, \"Transeq\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"p\");\n        i0.ɵɵtext(55, \" Transeq uses a standard genetic code to translate the nucleotide sequence into all possible reading frames. It can handle both single sequences and batches of sequences in a variety of input formats, such as FASTA and GenBank. The output is a FASTA-formatted file containing the translated protein sequences. Transeq is particularly useful in genome annotation, where it is often necessary to identify the protein-coding regions of a genome. It is also used in protein structure prediction and functional analysis, where knowledge of the protein sequence is essential. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"button\", 10);\n        i0.ɵɵtext(57, \" Button \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"mat-tab\", 16);\n        i0.ɵɵelementStart(59, \"h2\");\n        i0.ɵɵtext(60, \"BACKTRANSEQ\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(61, \"p\");\n        i0.ɵɵtext(62, \" The BACKTRANSEQ tool uses a process called back-translation to generate the most likely nucleotide sequence for a given protein sequence. The tool identifies all possible codons for each amino acid in the protein sequence, using the genetic code as a reference. The most likely codon is then selected based on factors such as codon usage bias, GC content, and other sequence characteristics. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"button\", 10);\n        i0.ɵɵtext(64, \" Button \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(65, \"mat-tab\", 17);\n        i0.ɵɵelement(66, \"app-dna-other-tools\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(7, _c0));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(8, _c1));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(9, _c2));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(10, _c3));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(11, _c4));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(12, _c5));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(13, _c6));\n      }\n    },\n    directives: [i1.MatTabGroup, i1.MatTab, i2.RouterLinkActive, i2.RouterLink, i3.DnaOtherToolsComponent],\n    styles: [\".mat-tab-group{flex-direction:row}  .mat-tab-header{border-bottom:none}  .mat-tab-header-pagination{display:none!important}  .mat-tab-labels{flex-direction:column}  .mat-ink-bar{height:100%;left:98%!important}  .mat-tab-body-wrapper{flex:1 1 auto}  .mat-tab-label{margin-bottom:14px!important;color:#000!important;background-color:#d7d7d7!important;padding:20px 30px!important}  .mat-tab-label:last-child{margin-bottom:0!important}  .mat-tab-label:first-child{display:none}  .mat-tab-label-active{background-color:#014371!important;color:#fff!important}.mainPadding[_ngcontent-%COMP%]{padding:6% 0}  .mat-tab-group.mat-primary .mat-ink-bar{background-color:#014371!important}  .mat-tab-body-content{overflow:hidden!important;margin-left:4%!important}  .mat-tab-body-content p{font-size:14px!important}  .mat-tab-body-content h2{margin-bottom:15px!important}.paddingTop[_ngcontent-%COMP%]{padding:3% 0}.btnFormating[_ngcontent-%COMP%]{background-color:#004473;color:#fff;padding:13px 21px;border:none;border-radius:7px;font-size:15px;margin-top:10px}\"]\n  });\n  return DataAnalysisComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}