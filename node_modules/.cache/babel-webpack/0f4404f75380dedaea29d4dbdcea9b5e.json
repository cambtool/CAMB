{"ast":null,"code":"import _asyncToGenerator from \"D:/dev/camb/camb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { FormControl } from '@angular/forms';\nimport { timer } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { ResultComponent } from 'src/app/data-formatting/result/result.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/data-formatting/dataformating.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/progress-spinner\";\n\nfunction EmbossWaterComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"div\", 23);\n    i0.ɵɵelementStart(2, \"div\", 24);\n    i0.ɵɵelement(3, \"mat-progress-spinner\", 25);\n    i0.ɵɵelementStart(4, \"h2\");\n    i0.ɵɵtext(5, \"Your Job Is Still Processing\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"mode\", \"indeterminate\")(\"value\", \"Your Job Is Still Processing\");\n  }\n}\n\nfunction EmbossWaterComponent_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", item_r7.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r7.label, \" \");\n  }\n}\n\nfunction EmbossWaterComponent_option_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", item_r8.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r8.label, \" \");\n  }\n}\n\nfunction EmbossWaterComponent_option_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", item_r9.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r9.label, \" \");\n  }\n}\n\nfunction EmbossWaterComponent_option_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", item_r10.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r10.label, \" \");\n  }\n}\n\nfunction EmbossWaterComponent_option_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", item_r11.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r11.label, \" \");\n  }\n}\n\nfunction EmbossWaterComponent_div_67_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 27);\n    i0.ɵɵelement(2, \"input\", 28);\n    i0.ɵɵelement(3, \"input\", 29);\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5, \" If available, the title will be included in the subject of the notification email and can be used as a way to identify your analysis\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let EmbossWaterComponent = /*#__PURE__*/(() => {\n  class EmbossWaterComponent {\n    constructor(fb, service, http, toaster, dialog) {\n      this.fb = fb;\n      this.service = service;\n      this.http = http;\n      this.toaster = toaster;\n      this.dialog = dialog;\n      this.sequence = [];\n      this.name = '';\n      this.show = false;\n      this.show2 = false;\n      this.show3 = false;\n      this.showLoader = false;\n      this.isSubmitted = false;\n      this.matrix = [];\n      this.gapopen = [];\n      this.gapext = [];\n      this.format = [];\n      this.stype = [];\n      this.data = [];\n      this.buttonName = 'More option...';\n      this.registrationForm = this.fb.group({\n        asequence: new FormControl(''),\n        bsequence: new FormControl(''),\n        matrix: new FormControl(''),\n        gapopen: new FormControl(''),\n        gapext: new FormControl(''),\n        format: new FormControl(''),\n        stype: new FormControl(''),\n        email: new FormControl(''),\n        title: new FormControl('')\n      });\n    }\n\n    ngOnInit() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        _this.matrix = yield _this.service.getformat('/emboss_water/parameterdetails/matrix').toPromise();\n        _this.gapopen = yield _this.service.getformat('/emboss_water/parameterdetails/gapopen').toPromise();\n        _this.gapext = yield _this.service.getformat('/emboss_water/parameterdetails/gapext').toPromise();\n        _this.format = yield _this.service.getformat('/emboss_water/parameterdetails/format').toPromise();\n        _this.stype = yield _this.service.getformat('/emboss_water/parameterdetails/stype').toPromise();\n      })();\n    }\n\n    toggle() {\n      // this.show = !this.show;\n      this.registrationForm.controls.asequence.setValue(`>sp|P69905|HBA_HUMAN Hemoglobin subunit alpha OS=Homo sapiens GN=HBA1 PE=1 SV=2\n    MVLSPADKTNVKAAWGKVGAHAGEYGAEALERMFLSFPTTKTYFPHFDLSHGSAQVKGHG\n    KKVADALTNAVAHVDDMPNALSALSDLHAHKLRVDPVNFKLLSHCLLVTLAAHLPAEFTP\n    AVHASLDKFLASVSTVLTSKYR  `);\n      this.registrationForm.controls.bsequence.setValue(`>sp|P01942|HBA_MOUSE Hemoglobin subunit alpha OS=Mus musculus GN=Hba PE=1 SV=2\n    MVLSGEDKSNIKAAWGKIGGHGAEYGAEALERMFASFPTTKTYFPHFDVSHGSAQVKGHG\n    KKVADALASAAGHLDDLPGALSALSDLHAHKLRVDPVNFKLLSHCLLVTLASHHPADFTP\n    AVHASLDKFLASVSTVLTSKYR  `);\n    }\n\n    toggleinput() {\n      this.show2 = !this.show2;\n      if (this.show2) this.buttonName = \"See Less\";else this.buttonName = \"More option\";\n    }\n\n    checkbox() {\n      this.show3 = !this.show3;\n    }\n\n    handleClear() {\n      this.registrationForm.controls.sequence.setValue('');\n    }\n\n    get cityName() {\n      return this.registrationForm.get('cityName');\n    }\n\n    onSubmit(xml) {\n      var _a, _b, _c, _d, _e, _f, _g;\n\n      let formdata = new FormData();\n      formdata.append(\"email\", (_a = this.registrationForm.get('email')) === null || _a === void 0 ? void 0 : _a.value);\n      formdata.append(\"positiveresidues\", (_b = this.registrationForm.get('positiveresidues')) === null || _b === void 0 ? void 0 : _b.value);\n      formdata.append(\"species\", (_c = this.registrationForm.get('species')) === null || _c === void 0 ? void 0 : _c.value);\n      formdata.append(\"outputtype\", (_d = this.registrationForm.get('outputtype')) === null || _d === void 0 ? void 0 : _d.value);\n      formdata.append(\"asequence\", (_e = this.registrationForm.get('asequence')) === null || _e === void 0 ? void 0 : _e.value);\n      formdata.append(\"bsequence\", (_f = this.registrationForm.get('bsequence')) === null || _f === void 0 ? void 0 : _f.value);\n      formdata.append(\"title\", (_g = this.registrationForm.get('title')) === null || _g === void 0 ? void 0 : _g.value);\n      this.isSubmitted = true;\n\n      if (!this.registrationForm.valid) {\n        false;\n      }\n\n      this.service.emboss_water_Run(formdata).subscribe(success => {\n        console.log(success);\n      }, error => {\n        console.log(error);\n\n        if (error.status == 200) {\n          this.jobId = error.error.text;\n\n          if (this.jobId != null) {\n            this.getResult(); // this.service.getEmboss_waterStatus(this.jobId).subscribe(\n            //   data => {\n            //     this.toaster.success(data.toString())\n            //   }, (error) => {\n            //     if (error.status == 200) {\n            //       this.jobStatus = error.error.text\n            //       this.toaster.info(this.jobStatus)\n            //       setTimeout(() => {\n            //         // if (this.jobStatus != \"FAILURE\") {\n            //         this.service.getEmboss_waterResult(this.jobId, 'out').subscribe(\n            //           success => {\n            //             console.log(success);\n            //           },\n            //           error => {\n            //             console.log(error);\n            //             if (error.status == 200) {\n            //               let result = error.error.text;\n            //               const dialogRef = this.dialog.open(ResultComponent, {\n            //                 data: {\n            //                   text: result\n            //                 }\n            //               });\n            //             }else {\n            //               this.toaster.error(error.error)\n            //             }\n            //           }\n            //         )\n            //         // }\n            //       }, 30000);\n            //     }\n            //     else {\n            //       this.toaster.error(error.error)\n            //     }\n            //   }\n            // )\n          }\n        } else {\n          this.toaster.error(error.error);\n        }\n      });\n    }\n\n    getResult() {\n      this.showLoader = true;\n      this.currentSub = timer(10000).pipe(mergeMap(() => this.service.getEmboss_waterStatus(this.jobId))).subscribe(response => {\n        console.log(response); // this.message_arr = response.resp;\n      }, error => {\n        var _a;\n\n        console.log(error);\n\n        if (error.status == 200) {\n          this.jobStatus = error.error.text;\n          this.toaster.info(this.jobStatus);\n\n          if (this.jobStatus != \"RUNNING\") {\n            this.service.getEmboss_waterResult(this.jobId, 'out').subscribe(response => {\n              console.log(response); // this.message_arr = response.resp;\n            }, error => {\n              console.log(error);\n\n              if (error.status == 200) {\n                this.showLoader = false;\n                let result = error.error.text;\n                const dialogRef = this.dialog.open(ResultComponent, {\n                  data: {\n                    text: result\n                  }\n                });\n              } else {\n                this.toaster.error(error.error);\n                this.getResult();\n              }\n            });\n          } else {\n            if (this.jobStatus == \"RUNNING\") {\n              this.getResult();\n            } else {\n              this.showLoader = false;\n              (_a = this.currentSub) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n            }\n          }\n        } else {\n          this.toaster.error(error.error);\n          this.getResult();\n        }\n      });\n    }\n\n    ngOnDestroy() {\n      var _a;\n\n      (_a = this.currentSub) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    }\n\n  }\n\n  EmbossWaterComponent.ɵfac = function EmbossWaterComponent_Factory(t) {\n    return new (t || EmbossWaterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DataformatingService), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.ToastrService), i0.ɵɵdirectiveInject(i5.MatDialog));\n  };\n\n  EmbossWaterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EmbossWaterComponent,\n    selectors: [[\"app-embossWater\"]],\n    decls: 70,\n    vars: 8,\n    consts: [[1, \"positionRelative\"], [4, \"ngIf\"], [1, \"pack-head\"], [1, \"page-size\"], [1, \"form\"], [3, \"formGroup\"], [1, \"step-one-form\"], [\"formControlName\", \"stype\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"placeholder\", \"Your Message\", \"cdkTextareaAutosize\", \"\", \"cdkAutosizeMinRows\", \"6\", \"formControlName\", \"asequence\", 2, \"width\", \"99%\", \"resize\", \"vertical\", \"height\", \"200px\", \"outline-color\", \"#014371\"], [\"matInput\", \"\", \"placeholder\", \"Your Message\", \"cdkTextareaAutosize\", \"\", \"cdkAutosizeMinRows\", \"6\", \"formControlName\", \"bsequence\", 2, \"width\", \"99%\", \"resize\", \"vertical\", \"height\", \"200px\", \"outline-color\", \"#014371\"], [1, \"btn\"], [\"id\", \"equence-btn\", 3, \"click\"], [3, \"click\"], [1, \"step-two-form\"], [1, \"more-option\"], [\"formControlName\", \"gapopen\"], [\"formControlName\", \"gapext\"], [\"formControlName\", \"format\"], [\"formControlName\", \"matrix\"], [1, \"step-three-form\"], [\"type\", \"checkbox\", \"id\", \"vehicle1\", \"name\", \"vehicle1\", \"value\", \"Bike\", 3, \"click\"], [\"id\", \"btnn\", \"type\", \"submit\", 3, \"click\"], [1, \"overlay\"], [1, \"progressBar\"], [1, \"custom-spinner\", 3, \"mode\", \"value\"], [3, \"ngValue\"], [1, \"job-frm\"], [\"id\", \"textbox\", \"type\", \"text\", \"placeholder\", \"EMAil\", \"formControlName\", \"email\"], [\"id\", \"textbox\", \"type\", \"text\", \"placeholder\", \"TITLE\", \"formControlName\", \"title\"]],\n    template: function EmbossWaterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, EmbossWaterComponent_ng_container_1_Template, 6, 2, \"ng-container\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"h1\");\n        i0.ɵɵtext(5, \"EMBOSS Water\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵelementStart(8, \"form\", 5);\n        i0.ɵɵelementStart(9, \"h2\");\n        i0.ɵɵtext(10, \"Pairwise Sequence Alignment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"p\");\n        i0.ɵɵtext(12, \"EMBOSS Water uses the Smith-Waterman algorithm (modified for speed enhancements) to calculate the local alignment of two sequences.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 6);\n        i0.ɵɵelementStart(14, \"div\");\n        i0.ɵɵelementStart(15, \"p\");\n        i0.ɵɵtext(16, \"Enter a pair of\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"select\", 7);\n        i0.ɵɵtemplate(18, EmbossWaterComponent_option_18_Template, 2, 2, \"option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"label\");\n        i0.ɵɵtext(20, \"Step:1 - Enter your input sequence \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"p\");\n        i0.ɵɵtext(22, \"sequences. Enter or paste your first protein sequence in any supported format:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"textarea\", 9);\n        i0.ɵɵtext(24, \"      \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"label\");\n        i0.ɵɵtext(26, \"And\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"p\");\n        i0.ɵɵtext(28, \"Enter or paste your second protein sequence in any supported format:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"textarea\", 10);\n        i0.ɵɵtext(30, \"    \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 11);\n        i0.ɵɵelementStart(32, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function EmbossWaterComponent_Template_button_click_32_listener() {\n          return ctx.toggle();\n        });\n        i0.ɵɵtext(33, \" Use a examples equence \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function EmbossWaterComponent_Template_button_click_34_listener() {\n          return ctx.handleClear();\n        });\n        i0.ɵɵtext(35, \"Clear\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 14);\n        i0.ɵɵelementStart(37, \"p\");\n        i0.ɵɵelementStart(38, \"label\");\n        i0.ɵɵtext(39, \"STEP 2 - Select Parameters\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\");\n        i0.ɵɵelementStart(41, \"div\", 15);\n        i0.ɵɵelementStart(42, \"p\");\n        i0.ɵɵtext(43, \"Gapopen\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"select\", 16);\n        i0.ɵɵtemplate(45, EmbossWaterComponent_option_45_Template, 2, 2, \"option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"div\", 15);\n        i0.ɵɵelementStart(47, \"p\");\n        i0.ɵɵtext(48, \"Gapext\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"select\", 17);\n        i0.ɵɵtemplate(50, EmbossWaterComponent_option_50_Template, 2, 2, \"option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"div\", 15);\n        i0.ɵɵelementStart(52, \"p\");\n        i0.ɵɵtext(53, \"Format\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(54, \"select\", 18);\n        i0.ɵɵtemplate(55, EmbossWaterComponent_option_55_Template, 2, 2, \"option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"div\", 15);\n        i0.ɵɵelementStart(57, \"p\");\n        i0.ɵɵtext(58, \"Matrix\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"select\", 19);\n        i0.ɵɵtemplate(60, EmbossWaterComponent_option_60_Template, 2, 2, \"option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(61, \"div\", 20);\n        i0.ɵɵelementStart(62, \"label\");\n        i0.ɵɵtext(63, \"STEP 3 - Submit your job\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"p\");\n        i0.ɵɵelementStart(65, \"input\", 21);\n        i0.ɵɵlistener(\"click\", function EmbossWaterComponent_Template_input_click_65_listener() {\n          return ctx.checkbox();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(66, \" Be notified by email (Tick this box if you want to be notified by email when the results are available) \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(67, EmbossWaterComponent_div_67_Template, 6, 0, \"div\", 1);\n        i0.ɵɵelementStart(68, \"button\", 22);\n        i0.ɵɵlistener(\"click\", function EmbossWaterComponent_Template_button_click_68_listener() {\n          return ctx.onSubmit(ctx.registrationForm.value);\n        });\n        i0.ɵɵtext(69, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showLoader);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.registrationForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.stype.values.values);\n        i0.ɵɵadvance(27);\n        i0.ɵɵproperty(\"ngForOf\", ctx.gapopen.values.values);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.gapext.values.values);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.format.values.values);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.matrix.values.values);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.show3);\n      }\n    },\n    directives: [i6.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.FormControlName, i6.NgForOf, i1.DefaultValueAccessor, i7.MatProgressSpinner, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n    styles: [\".positionRelative[_ngcontent-%COMP%]{position:relative!important}.overlay[_ngcontent-%COMP%]{background-color:#0006;width:100%;height:100%;position:absolute;top:0;left:0}.progressBar[_ngcontent-%COMP%]{width:50%;margin:0 auto;position:absolute;top:10%;left:0;right:0;padding:20px;z-index:2}.progressBar[_ngcontent-%COMP%]   .custom-spinner[_ngcontent-%COMP%]{margin:0 auto}.progressBar[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{text-align:center;margin:0;font-size:25px;padding-top:20px;color:#fff}.custom-spinner[_ngcontent-%COMP%]   .mat-progress-spinner-circle[_ngcontent-%COMP%]{stroke:red}.custom-spinner[_ngcontent-%COMP%]   .mat-progress-spinner-circle[_ngcontent-%COMP%], .custom-spinner[_ngcontent-%COMP%]   .mat-progress-spinner-circle.mat-progress-spinner-primary[_ngcontent-%COMP%]{stroke:#00f}.custom-spinner[_ngcontent-%COMP%]   .mat-progress-spinner-circle.mat-progress-spinner-primary[_ngcontent-%COMP%]   .mat-progress-spinner-path[_ngcontent-%COMP%]{stroke:green}  .mat-progress-spinner circle{stroke:#fff!important}\"]\n  });\n  return EmbossWaterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}